[gd_scene load_steps=18 format=2]

[ext_resource path="res://skills/Icewall/textures/blockFade.png" type="Texture" id=1]
[ext_resource path="res://skills/Icewall/textures/blockNorm.png" type="Texture" id=2]
[ext_resource path="res://skills/Icewall/textures/blockRough.png" type="Texture" id=3]
[ext_resource path="res://skills/Icewall/textures/basePattern.png" type="Texture" id=4]
[ext_resource path="res://skills/Icewall/textures/blockDiff.png" type="Texture" id=5]

[sub_resource type="BoxShape" id=1]
extents = Vector3( 8, 2.5, 1.5 )

[sub_resource type="ArrayMesh" id=6]
resource_name = "iceBlock_block0"
surfaces/0 = {
"aabb": AABB( -7.8, 0, -1.3, 15.6, 4, 2.6 ),
"array_data": PoolByteArray( 102, 102, 134, 192, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 0, 0, 60, 102, 102, 134, 192, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 60, 0, 60, 102, 102, 134, 192, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 0, 0, 60, 102, 102, 134, 192, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 60, 0, 60, 154, 153, 249, 192, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 0, 0, 60, 154, 153, 249, 192, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 60, 0, 60, 154, 153, 249, 192, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 0, 0, 0, 60, 154, 153, 249, 192, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 255, 59, 0, 60, 204, 204, 140, 192, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 81, 28, 43, 0, 0, 204, 204, 140, 192, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 4, 98, 59, 0, 0, 204, 204, 140, 192, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 127, 63, 0, 60, 0, 0, 102, 102, 134, 192, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 97, 0, 0, 102, 42, 102, 102, 134, 192, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 21, 0, 60, 102, 42, 204, 204, 140, 192, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 122, 236, 44, 0, 0, 204, 204, 140, 192, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 45, 142, 59, 0, 0, 204, 204, 140, 192, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 127, 193, 0, 60, 0, 0, 102, 102, 134, 192, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 105, 0, 0, 102, 42, 102, 102, 134, 192, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 29, 0, 60, 102, 42, 52, 51, 243, 192, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 127, 63, 0, 0, 0, 0, 52, 51, 243, 192, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 248, 77, 236, 44, 0, 0, 52, 51, 243, 192, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 166, 49, 142, 59, 0, 0, 154, 153, 249, 192, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 214, 76, 0, 0, 102, 42, 154, 153, 249, 192, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 198, 50, 0, 60, 102, 42, 52, 51, 243, 192, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 127, 193, 0, 0, 0, 0, 52, 51, 243, 192, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 90, 77, 28, 43, 0, 0, 52, 51, 243, 192, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 8, 49, 98, 59, 0, 0, 154, 153, 249, 192, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 58, 76, 0, 0, 102, 42, 154, 153, 249, 192, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 42, 50, 255, 59, 102, 42, 192, 204, 76, 190, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 0, 0, 60, 192, 204, 76, 190, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 60, 0, 60, 192, 204, 76, 190, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 0, 0, 60, 192, 204, 76, 190, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 60, 0, 60, 52, 51, 115, 192, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 0, 0, 60, 52, 51, 115, 192, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 60, 0, 60, 52, 51, 115, 192, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 0, 0, 0, 60, 52, 51, 115, 192, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 255, 59, 0, 60, 192, 204, 204, 190, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 81, 28, 43, 0, 0, 192, 204, 204, 190, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 4, 98, 59, 0, 0, 192, 204, 204, 190, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 127, 63, 0, 60, 0, 0, 192, 204, 76, 190, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 97, 0, 0, 102, 42, 192, 204, 76, 190, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 21, 0, 60, 102, 42, 192, 204, 204, 190, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 122, 236, 44, 0, 0, 192, 204, 204, 190, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 45, 142, 59, 0, 0, 192, 204, 204, 190, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 127, 193, 0, 60, 0, 0, 192, 204, 76, 190, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 105, 0, 0, 102, 42, 192, 204, 76, 190, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 29, 0, 60, 102, 42, 104, 102, 102, 192, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 127, 63, 0, 0, 0, 0, 104, 102, 102, 192, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 248, 77, 236, 44, 0, 0, 104, 102, 102, 192, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 166, 49, 142, 59, 0, 0, 52, 51, 115, 192, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 214, 76, 0, 0, 102, 42, 52, 51, 115, 192, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 198, 50, 0, 60, 102, 42, 104, 102, 102, 192, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 127, 193, 0, 0, 0, 0, 104, 102, 102, 192, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 90, 77, 28, 43, 0, 0, 104, 102, 102, 192, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 8, 49, 98, 59, 0, 0, 52, 51, 115, 192, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 58, 76, 0, 0, 102, 42, 52, 51, 115, 192, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 42, 50, 255, 59, 102, 42, 52, 51, 115, 64, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 0, 0, 60, 52, 51, 115, 64, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 60, 0, 60, 52, 51, 115, 64, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 0, 0, 60, 52, 51, 115, 64, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 60, 0, 60, 192, 204, 76, 62, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 0, 0, 60, 192, 204, 76, 62, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 60, 0, 60, 192, 204, 76, 62, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 0, 0, 0, 60, 192, 204, 76, 62, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 255, 59, 0, 60, 104, 102, 102, 64, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 81, 28, 43, 0, 0, 104, 102, 102, 64, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 4, 98, 59, 0, 0, 104, 102, 102, 64, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 127, 63, 0, 60, 0, 0, 52, 51, 115, 64, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 97, 0, 0, 102, 42, 52, 51, 115, 64, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 21, 0, 60, 102, 42, 104, 102, 102, 64, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 122, 236, 44, 0, 0, 104, 102, 102, 64, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 45, 142, 59, 0, 0, 104, 102, 102, 64, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 127, 193, 0, 60, 0, 0, 52, 51, 115, 64, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 105, 0, 0, 102, 42, 52, 51, 115, 64, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 29, 0, 60, 102, 42, 192, 204, 204, 62, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 127, 63, 0, 0, 0, 0, 192, 204, 204, 62, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 248, 77, 236, 44, 0, 0, 192, 204, 204, 62, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 166, 49, 142, 59, 0, 0, 192, 204, 76, 62, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 214, 76, 0, 0, 102, 42, 192, 204, 76, 62, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 198, 50, 0, 60, 102, 42, 192, 204, 204, 62, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 127, 193, 0, 0, 0, 0, 192, 204, 204, 62, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 90, 77, 28, 43, 0, 0, 192, 204, 204, 62, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 8, 49, 98, 59, 0, 0, 192, 204, 76, 62, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 58, 76, 0, 0, 102, 42, 192, 204, 76, 62, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 42, 50, 255, 59, 102, 42, 154, 153, 249, 64, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 0, 0, 60, 154, 153, 249, 64, 0, 0, 0, 0, 102, 102, 166, 191, 127, 63, 129, 95, 0, 60, 0, 60, 154, 153, 249, 64, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 0, 0, 60, 154, 153, 249, 64, 0, 0, 0, 0, 102, 102, 166, 63, 63, 0, 127, 95, 0, 60, 0, 60, 102, 102, 134, 64, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 0, 0, 60, 102, 102, 134, 64, 0, 0, 0, 0, 102, 102, 166, 191, 129, 63, 193, 63, 0, 60, 0, 60, 102, 102, 134, 64, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 0, 0, 0, 60, 102, 102, 134, 64, 0, 0, 0, 0, 102, 102, 166, 63, 193, 0, 63, 63, 255, 59, 0, 60, 52, 51, 243, 64, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 81, 28, 43, 0, 0, 52, 51, 243, 64, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 157, 4, 98, 59, 0, 0, 52, 51, 243, 64, 0, 0, 128, 64, 204, 204, 140, 191, 50, 101, 127, 63, 0, 60, 0, 0, 154, 153, 249, 64, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 97, 0, 0, 102, 42, 154, 153, 249, 64, 52, 51, 115, 64, 102, 102, 166, 191, 97, 78, 155, 21, 0, 60, 102, 42, 52, 51, 243, 64, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 122, 236, 44, 0, 0, 52, 51, 243, 64, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 99, 45, 142, 59, 0, 0, 52, 51, 243, 64, 0, 0, 128, 64, 204, 204, 140, 63, 25, 76, 127, 193, 0, 60, 0, 0, 154, 153, 249, 64, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 105, 0, 0, 102, 42, 154, 153, 249, 64, 52, 51, 115, 64, 102, 102, 166, 63, 48, 29, 101, 29, 0, 60, 102, 42, 204, 204, 140, 64, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 127, 63, 0, 0, 0, 0, 204, 204, 140, 64, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 248, 77, 236, 44, 0, 0, 204, 204, 140, 64, 0, 0, 128, 64, 204, 204, 140, 191, 206, 101, 166, 49, 142, 59, 0, 0, 102, 102, 134, 64, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 214, 76, 0, 0, 102, 42, 102, 102, 134, 64, 52, 51, 115, 64, 102, 102, 166, 191, 159, 78, 198, 50, 0, 60, 102, 42, 204, 204, 140, 64, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 127, 193, 0, 0, 0, 0, 204, 204, 140, 64, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 90, 77, 28, 43, 0, 0, 204, 204, 140, 64, 0, 0, 128, 64, 204, 204, 140, 63, 231, 76, 8, 49, 98, 59, 0, 0, 102, 102, 134, 64, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 58, 76, 0, 0, 102, 42, 102, 102, 134, 64, 52, 51, 115, 64, 102, 102, 166, 63, 208, 29, 42, 50, 255, 59, 102, 42 ),
"array_index_data": PoolByteArray( 5, 0, 11, 0, 22, 0, 5, 0, 0, 0, 11, 0, 3, 0, 26, 0, 17, 0, 3, 0, 6, 0, 26, 0, 7, 0, 21, 0, 27, 0, 7, 0, 4, 0, 21, 0, 10, 0, 23, 0, 18, 0, 10, 0, 15, 0, 23, 0, 1, 0, 16, 0, 12, 0, 1, 0, 2, 0, 16, 0, 14, 0, 26, 0, 24, 0, 14, 0, 17, 0, 26, 0, 9, 0, 16, 0, 13, 0, 9, 0, 12, 0, 16, 0, 25, 0, 21, 0, 19, 0, 25, 0, 27, 0, 21, 0, 20, 0, 11, 0, 8, 0, 20, 0, 22, 0, 11, 0, 33, 0, 39, 0, 50, 0, 33, 0, 28, 0, 39, 0, 31, 0, 54, 0, 45, 0, 31, 0, 34, 0, 54, 0, 35, 0, 49, 0, 55, 0, 35, 0, 32, 0, 49, 0, 38, 0, 51, 0, 46, 0, 38, 0, 43, 0, 51, 0, 29, 0, 44, 0, 40, 0, 29, 0, 30, 0, 44, 0, 42, 0, 54, 0, 52, 0, 42, 0, 45, 0, 54, 0, 37, 0, 44, 0, 41, 0, 37, 0, 40, 0, 44, 0, 53, 0, 49, 0, 47, 0, 53, 0, 55, 0, 49, 0, 48, 0, 39, 0, 36, 0, 48, 0, 50, 0, 39, 0, 61, 0, 67, 0, 78, 0, 61, 0, 56, 0, 67, 0, 59, 0, 82, 0, 73, 0, 59, 0, 62, 0, 82, 0, 63, 0, 77, 0, 83, 0, 63, 0, 60, 0, 77, 0, 66, 0, 79, 0, 74, 0, 66, 0, 71, 0, 79, 0, 57, 0, 72, 0, 68, 0, 57, 0, 58, 0, 72, 0, 70, 0, 82, 0, 80, 0, 70, 0, 73, 0, 82, 0, 65, 0, 72, 0, 69, 0, 65, 0, 68, 0, 72, 0, 81, 0, 77, 0, 75, 0, 81, 0, 83, 0, 77, 0, 76, 0, 67, 0, 64, 0, 76, 0, 78, 0, 67, 0, 89, 0, 95, 0, 106, 0, 89, 0, 84, 0, 95, 0, 87, 0, 110, 0, 101, 0, 87, 0, 90, 0, 110, 0, 91, 0, 105, 0, 111, 0, 91, 0, 88, 0, 105, 0, 94, 0, 107, 0, 102, 0, 94, 0, 99, 0, 107, 0, 85, 0, 100, 0, 96, 0, 85, 0, 86, 0, 100, 0, 98, 0, 110, 0, 108, 0, 98, 0, 101, 0, 110, 0, 93, 0, 100, 0, 97, 0, 93, 0, 96, 0, 100, 0, 109, 0, 105, 0, 103, 0, 109, 0, 111, 0, 105, 0, 104, 0, 95, 0, 92, 0, 104, 0, 106, 0, 95, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 216,
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 112
}

[sub_resource type="Shader" id=7]
code = "shader_type spatial;
render_mode blend_add, unshaded, cull_disabled;

uniform float intensity: hint_range(0.0, 1.0, 0.01) = 1.0;
uniform float cutoff: hint_range(1.0, 10.0, 0.01);
uniform vec4 color: hint_color;
uniform float proximity_fade_dist = 2.0;
uniform sampler2D pattern_texture;

void fragment() {
	float alpha = 1.0 - UV.y * cutoff;
	
	// pattern
	float pattern = texture(pattern_texture, UV - vec2(sin(TIME * 0.2) * 0.5, TIME * 0.5)).r;
	alpha += pattern;
	
	// proximity fade
	float depth_tex = texture(DEPTH_TEXTURE, SCREEN_UV).r;
	vec4 world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, depth_tex * 2.0 - 1.0, 1.0);
	world_pos.xyz /= world_pos.w;
	alpha *= 1.0 - smoothstep(world_pos.z + proximity_fade_dist, world_pos.z, VERTEX.z);
	
	ALPHA = clamp(alpha, 0.0, 1.0) * intensity;
	ALBEDO = color.rgb;
}"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/intensity = 0.0
shader_param/cutoff = 10.0
shader_param/color = Color( 0, 1, 0.933333, 1 )
shader_param/proximity_fade_dist = 2.0

[sub_resource type="ArrayMesh" id=3]
resource_name = "iceBlock_block1"
surfaces/0 = {
"aabb": AABB( -2, 0, -1.49678, 4.06467, 5, 2.99356 ),
"array_data": PoolByteArray( 57, 228, 248, 191, 0, 0, 0, 0, 95, 150, 191, 63, 135, 250, 2, 31, 254, 59, 128, 58, 57, 228, 248, 191, 0, 0, 0, 0, 95, 150, 191, 63, 0, 129, 129, 95, 147, 55, 98, 49, 57, 228, 248, 191, 0, 0, 0, 0, 95, 150, 191, 63, 1, 1, 198, 30, 254, 59, 207, 51, 28, 230, 240, 191, 0, 0, 0, 0, 95, 150, 191, 191, 135, 250, 2, 31, 126, 58, 255, 59, 28, 230, 240, 191, 0, 0, 0, 0, 95, 150, 191, 191, 0, 129, 129, 95, 249, 56, 45, 37, 28, 230, 240, 191, 0, 0, 0, 0, 95, 150, 191, 191, 123, 125, 190, 93, 201, 51, 255, 59, 154, 35, 4, 64, 0, 0, 0, 0, 167, 210, 177, 63, 0, 129, 129, 95, 146, 52, 148, 167, 154, 35, 4, 64, 0, 0, 0, 0, 167, 210, 177, 63, 1, 1, 195, 31, 10, 58, 139, 6, 154, 35, 4, 64, 0, 0, 0, 0, 167, 210, 177, 63, 120, 7, 254, 95, 181, 49, 177, 28, 33, 107, 3, 64, 0, 0, 0, 49, 199, 38, 180, 191, 0, 129, 129, 95, 205, 54, 96, 177, 33, 107, 3, 64, 0, 0, 0, 49, 199, 38, 180, 191, 123, 125, 195, 95, 140, 6, 13, 58, 33, 107, 3, 64, 0, 0, 0, 49, 199, 38, 180, 191, 120, 7, 254, 95, 143, 25, 196, 49, 225, 55, 243, 191, 0, 0, 160, 64, 102, 102, 166, 63, 183, 52, 229, 44, 136, 57, 57, 56, 225, 55, 243, 191, 0, 0, 160, 64, 102, 102, 166, 63, 0, 87, 207, 51, 136, 57, 57, 56, 231, 232, 248, 191, 205, 204, 156, 64, 51, 51, 179, 63, 153, 22, 245, 35, 165, 57, 62, 56, 231, 232, 248, 191, 205, 204, 156, 64, 51, 51, 179, 63, 0, 0, 193, 31, 165, 57, 52, 56, 231, 232, 248, 191, 205, 204, 156, 64, 51, 51, 179, 63, 0, 63, 218, 41, 165, 57, 52, 56, 51, 51, 243, 191, 0, 0, 160, 64, 102, 102, 166, 191, 183, 52, 224, 40, 56, 56, 138, 57, 51, 51, 243, 191, 0, 0, 160, 64, 102, 102, 166, 191, 42, 127, 199, 74, 56, 56, 138, 57, 0, 0, 0, 192, 205, 204, 156, 64, 51, 51, 179, 191, 155, 23, 244, 35, 61, 56, 167, 57, 0, 0, 0, 192, 205, 204, 156, 64, 51, 51, 179, 191, 127, 127, 193, 95, 51, 56, 167, 57, 0, 0, 0, 192, 205, 204, 156, 64, 51, 51, 179, 191, 63, 127, 204, 82, 51, 56, 167, 57, 51, 51, 243, 63, 0, 0, 160, 64, 102, 102, 166, 63, 25, 76, 192, 64, 128, 55, 227, 52, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 63, 0, 0, 193, 31, 138, 55, 169, 52, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 63, 0, 63, 205, 44, 138, 55, 169, 52, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 63, 63, 63, 217, 83, 118, 55, 169, 52, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 63, 127, 0, 0, 96, 118, 55, 169, 52, 51, 51, 243, 63, 0, 0, 160, 64, 102, 102, 166, 191, 50, 101, 208, 79, 224, 52, 131, 55, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 191, 127, 127, 193, 95, 166, 52, 141, 55, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 191, 63, 127, 204, 82, 166, 52, 141, 55, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 191, 63, 63, 219, 82, 166, 52, 121, 55, 0, 0, 0, 64, 205, 204, 156, 64, 51, 51, 179, 191, 127, 0, 0, 96, 166, 52, 121, 55, 107, 31, 2, 64, 138, 122, 68, 63, 9, 114, 183, 63, 0, 3, 195, 32, 177, 57, 5, 42, 107, 31, 2, 64, 138, 122, 68, 63, 9, 114, 183, 63, 122, 5, 254, 95, 59, 51, 5, 42, 0, 0, 0, 64, 226, 246, 201, 63, 51, 51, 179, 63, 0, 2, 194, 31, 84, 57, 45, 46, 0, 0, 0, 64, 226, 246, 201, 63, 51, 51, 179, 63, 125, 1, 0, 96, 88, 52, 46, 46, 57, 228, 248, 191, 148, 156, 202, 63, 4, 74, 178, 63, 132, 255, 1, 31, 51, 59, 206, 57, 57, 228, 248, 191, 148, 156, 202, 63, 4, 74, 178, 63, 0, 2, 195, 31, 48, 59, 70, 53, 57, 228, 248, 191, 136, 122, 68, 63, 9, 114, 183, 63, 133, 252, 1, 31, 154, 59, 43, 58, 57, 228, 248, 191, 136, 122, 68, 63, 9, 114, 183, 63, 0, 3, 197, 30, 153, 59, 145, 52, 72, 73, 253, 191, 226, 246, 201, 63, 51, 51, 179, 191, 132, 255, 1, 31, 204, 57, 54, 59, 72, 73, 253, 191, 226, 246, 201, 63, 51, 51, 179, 191, 124, 126, 192, 94, 73, 53, 54, 59, 114, 10, 249, 191, 136, 122, 68, 63, 9, 114, 183, 191, 133, 252, 1, 31, 41, 58, 155, 59, 114, 10, 249, 191, 136, 122, 68, 63, 9, 114, 183, 191, 122, 126, 191, 93, 142, 52, 155, 59, 0, 0, 0, 64, 226, 246, 201, 63, 51, 51, 179, 191, 124, 126, 194, 95, 33, 46, 85, 57, 0, 0, 0, 64, 226, 246, 201, 63, 51, 51, 179, 191, 125, 1, 0, 96, 32, 46, 92, 52, 245, 67, 0, 64, 226, 32, 66, 63, 63, 53, 182, 191, 122, 126, 195, 95, 19, 42, 183, 57, 245, 67, 0, 64, 226, 32, 66, 63, 63, 53, 182, 191, 122, 5, 254, 95, 237, 41, 57, 51 ),
"array_index_data": PoolByteArray( 27, 0, 13, 0, 18, 0, 27, 0, 22, 0, 13, 0, 45, 0, 26, 0, 31, 0, 45, 0, 35, 0, 26, 0, 36, 0, 19, 0, 14, 0, 36, 0, 40, 0, 19, 0, 4, 0, 6, 0, 9, 0, 4, 0, 1, 0, 6, 0, 41, 0, 28, 0, 20, 0, 41, 0, 44, 0, 28, 0, 12, 0, 19, 0, 17, 0, 12, 0, 14, 0, 19, 0, 18, 0, 29, 0, 27, 0, 18, 0, 21, 0, 29, 0, 27, 0, 25, 0, 22, 0, 27, 0, 30, 0, 25, 0, 22, 0, 16, 0, 13, 0, 22, 0, 24, 0, 16, 0, 34, 0, 15, 0, 23, 0, 34, 0, 37, 0, 15, 0, 7, 0, 39, 0, 32, 0, 7, 0, 2, 0, 39, 0, 32, 0, 37, 0, 34, 0, 32, 0, 39, 0, 37, 0, 5, 0, 46, 0, 43, 0, 5, 0, 10, 0, 46, 0, 43, 0, 44, 0, 41, 0, 43, 0, 46, 0, 44, 0, 0, 0, 42, 0, 38, 0, 0, 0, 3, 0, 42, 0, 38, 0, 40, 0, 36, 0, 38, 0, 42, 0, 40, 0, 11, 0, 33, 0, 47, 0, 11, 0, 8, 0, 33, 0, 47, 0, 35, 0, 45, 0, 47, 0, 33, 0, 35, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 108,
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 48
}

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode blend_mix, cull_disabled;

uniform float dissolve_threshold: hint_range(0.0, 1.0, 0.01);
uniform sampler2D dissolve_texture;
uniform sampler2D albedo_texture;
uniform sampler2D roughness_texture;
uniform sampler2D normal_map;
uniform sampler2D emission_map;
uniform float emission_strength: hint_range(0.0, 1.0, 0.01);

void fragment() {
	vec3 color = texture(albedo_texture, UV).rgb;
	float rough = texture(roughness_texture, UV).r;
	vec3 normal = texture(normal_map, UV).rgb;
	
	// emission
	vec3 emit = texture(emission_map, UV).rgb;
	
	// dissolve
	float dissolve = texture(dissolve_texture, UV).r;
	float alpha = step(dissolve, dissolve_threshold);
	
	ALPHA = alpha;
	ALPHA_SCISSOR = 0.1;
	ALBEDO = color;
	ROUGHNESS = rough;
	SPECULAR = 0.0;
	NORMALMAP = normal;
	EMISSION = emit * emission_strength;
}"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/dissolve_threshold = 0.0
shader_param/emission_strength = 1.0
shader_param/dissolve_texture = ExtResource( 1 )
shader_param/albedo_texture = ExtResource( 5 )
shader_param/roughness_texture = ExtResource( 3 )
shader_param/normal_map = ExtResource( 2 )
shader_param/emission_map = ExtResource( 4 )

[sub_resource type="ArrayMesh" id=9]
resource_name = "iceBlock_baseFX"
surfaces/0 = {
"aabb": AABB( -10.4971, 0, -3.61163, 20.9943, 4.50001, 7.22327 ),
"array_data": PoolByteArray( 155, 242, 127, 192, 0, 0, 144, 64, 244, 245, 191, 63, 0, 0, 126, 63, 0, 0, 30, 37, 155, 242, 127, 192, 0, 0, 144, 64, 244, 245, 191, 63, 0, 0, 126, 63, 0, 60, 30, 37, 0, 0, 0, 0, 0, 0, 144, 64, 233, 240, 191, 63, 0, 0, 126, 63, 0, 0, 30, 37, 0, 0, 0, 0, 0, 0, 144, 64, 233, 240, 191, 63, 0, 0, 126, 63, 0, 60, 30, 37, 155, 242, 127, 64, 0, 0, 144, 64, 244, 245, 191, 63, 0, 0, 126, 63, 0, 0, 30, 37, 155, 242, 127, 64, 0, 0, 144, 64, 244, 245, 191, 63, 0, 0, 126, 63, 0, 60, 30, 37, 241, 63, 165, 64, 106, 212, 22, 60, 56, 156, 101, 64, 0, 74, 125, 62, 0, 0, 235, 59, 241, 63, 165, 64, 106, 212, 22, 60, 56, 156, 101, 64, 0, 74, 126, 62, 0, 60, 235, 59, 0, 0, 0, 0, 145, 133, 167, 60, 35, 202, 100, 64, 0, 72, 126, 63, 0, 0, 235, 59, 0, 0, 0, 0, 145, 133, 167, 60, 35, 202, 100, 64, 0, 72, 125, 63, 0, 60, 235, 59, 241, 63, 165, 192, 106, 212, 22, 60, 56, 156, 101, 64, 0, 74, 125, 64, 0, 0, 235, 59, 241, 63, 165, 192, 106, 212, 22, 60, 56, 156, 101, 64, 0, 74, 123, 63, 0, 60, 235, 59, 155, 242, 127, 64, 0, 0, 144, 64, 244, 245, 191, 191, 126, 126, 130, 63, 0, 0, 30, 37, 155, 242, 127, 64, 0, 0, 144, 64, 244, 245, 191, 191, 126, 126, 130, 63, 0, 60, 30, 37, 0, 0, 0, 0, 0, 0, 144, 64, 233, 240, 191, 191, 126, 127, 130, 63, 0, 0, 30, 37, 0, 0, 0, 0, 0, 0, 144, 64, 233, 240, 191, 191, 126, 127, 130, 63, 0, 60, 30, 37, 155, 242, 127, 192, 0, 0, 144, 64, 244, 245, 191, 191, 130, 126, 130, 63, 0, 0, 30, 37, 155, 242, 127, 192, 0, 0, 144, 64, 244, 245, 191, 191, 130, 126, 130, 63, 0, 60, 30, 37, 241, 63, 165, 192, 106, 212, 22, 60, 56, 156, 101, 192, 204, 126, 131, 62, 0, 0, 235, 59, 241, 63, 165, 192, 106, 212, 22, 60, 56, 156, 101, 192, 204, 126, 132, 63, 0, 60, 235, 59, 0, 0, 0, 0, 145, 133, 167, 60, 35, 202, 100, 192, 54, 127, 130, 63, 0, 0, 235, 59, 0, 0, 0, 0, 145, 133, 167, 60, 35, 202, 100, 192, 54, 127, 130, 62, 0, 60, 235, 59, 241, 63, 165, 64, 106, 212, 22, 60, 56, 156, 101, 192, 52, 126, 131, 64, 0, 0, 235, 59, 241, 63, 165, 64, 106, 212, 22, 60, 56, 156, 101, 192, 52, 126, 130, 61, 0, 60, 235, 59, 139, 254, 255, 64, 0, 0, 144, 64, 232, 254, 191, 191, 126, 190, 130, 33, 0, 0, 30, 37, 139, 254, 255, 64, 0, 0, 144, 64, 232, 254, 191, 191, 126, 190, 130, 93, 0, 60, 30, 37, 161, 90, 38, 65, 0, 0, 0, 0, 1, 37, 103, 192, 50, 102, 156, 81, 0, 0, 235, 59, 161, 90, 38, 65, 0, 0, 0, 0, 1, 37, 103, 192, 50, 102, 155, 6, 0, 60, 235, 59, 139, 254, 255, 64, 0, 0, 144, 64, 232, 254, 191, 63, 60, 0, 126, 33, 0, 0, 30, 37, 139, 254, 255, 64, 0, 0, 144, 64, 232, 254, 191, 63, 60, 0, 126, 93, 0, 60, 30, 37, 161, 90, 38, 65, 0, 0, 0, 0, 1, 37, 103, 64, 24, 76, 100, 120, 0, 0, 235, 59, 161, 90, 38, 65, 0, 0, 0, 0, 1, 37, 103, 64, 24, 76, 101, 45, 0, 60, 235, 59, 139, 254, 255, 192, 0, 0, 144, 64, 232, 254, 191, 191, 130, 190, 190, 63, 0, 0, 30, 37, 139, 254, 255, 192, 0, 0, 144, 64, 232, 254, 191, 191, 130, 190, 190, 63, 0, 60, 30, 37, 161, 90, 38, 193, 0, 0, 0, 0, 1, 37, 103, 192, 206, 102, 244, 76, 0, 0, 235, 59, 161, 90, 38, 193, 0, 0, 0, 0, 1, 37, 103, 192, 206, 102, 166, 50, 0, 60, 235, 59, 139, 254, 255, 192, 0, 0, 144, 64, 232, 254, 191, 63, 196, 0, 66, 63, 0, 0, 30, 37, 139, 254, 255, 192, 0, 0, 144, 64, 232, 254, 191, 63, 196, 0, 66, 63, 0, 60, 30, 37, 161, 90, 38, 193, 0, 0, 0, 0, 1, 37, 103, 64, 232, 76, 91, 76, 0, 0, 235, 59, 161, 90, 38, 193, 0, 0, 0, 0, 1, 37, 103, 64, 232, 76, 13, 50, 0, 60, 235, 59, 0, 0, 0, 0, 70, 217, 78, 64, 6, 253, 192, 63, 0, 9, 126, 63, 0, 0, 102, 49, 0, 0, 0, 0, 70, 217, 78, 64, 6, 253, 192, 63, 0, 9, 126, 63, 0, 60, 102, 49, 0, 0, 0, 0, 246, 3, 9, 64, 0, 183, 217, 63, 0, 29, 126, 63, 0, 0, 229, 53, 0, 0, 0, 0, 246, 3, 9, 64, 0, 183, 217, 63, 0, 29, 126, 63, 0, 60, 229, 53, 0, 0, 0, 0, 95, 21, 140, 63, 135, 69, 12, 64, 0, 56, 126, 63, 0, 0, 43, 57, 0, 0, 0, 0, 95, 21, 140, 63, 135, 69, 12, 64, 0, 56, 125, 63, 0, 60, 43, 57, 230, 73, 127, 64, 49, 217, 78, 64, 13, 165, 191, 63, 0, 7, 126, 63, 0, 0, 102, 49, 230, 73, 127, 64, 49, 217, 78, 64, 13, 165, 191, 63, 0, 7, 126, 63, 0, 60, 102, 49, 190, 188, 131, 64, 135, 222, 8, 64, 28, 24, 210, 63, 1, 26, 126, 62, 0, 0, 229, 53, 190, 188, 131, 64, 135, 222, 8, 64, 28, 24, 210, 63, 1, 26, 126, 62, 0, 60, 229, 53, 50, 136, 140, 64, 44, 130, 138, 63, 28, 103, 6, 64, 1, 55, 126, 62, 0, 0, 43, 57, 50, 136, 140, 64, 44, 130, 138, 63, 28, 103, 6, 64, 1, 55, 126, 62, 0, 60, 43, 57, 230, 73, 127, 192, 49, 217, 78, 64, 13, 165, 191, 191, 137, 126, 130, 63, 0, 0, 102, 49, 230, 73, 127, 192, 49, 217, 78, 64, 13, 165, 191, 191, 137, 126, 130, 63, 0, 60, 102, 49, 190, 188, 131, 192, 135, 222, 8, 64, 28, 24, 210, 191, 156, 125, 132, 63, 0, 0, 229, 53, 190, 188, 131, 192, 135, 222, 8, 64, 28, 24, 210, 191, 156, 125, 132, 63, 0, 60, 229, 53, 50, 136, 140, 192, 44, 130, 138, 63, 28, 103, 6, 192, 185, 125, 132, 63, 0, 0, 43, 57, 50, 136, 140, 192, 44, 130, 138, 63, 28, 103, 6, 192, 185, 125, 132, 63, 0, 60, 43, 57, 230, 73, 127, 64, 49, 217, 78, 64, 13, 165, 191, 191, 119, 126, 130, 63, 0, 0, 102, 49, 230, 73, 127, 64, 49, 217, 78, 64, 13, 165, 191, 191, 119, 126, 130, 63, 0, 60, 102, 49, 190, 188, 131, 64, 135, 222, 8, 64, 28, 24, 210, 191, 100, 125, 130, 64, 0, 0, 229, 53, 190, 188, 131, 64, 135, 222, 8, 64, 28, 24, 210, 191, 100, 125, 130, 64, 0, 60, 229, 53, 50, 136, 140, 64, 44, 130, 138, 63, 28, 103, 6, 192, 71, 125, 131, 65, 0, 0, 43, 57, 50, 136, 140, 64, 44, 130, 138, 63, 28, 103, 6, 192, 71, 125, 130, 62, 0, 60, 43, 57, 46, 195, 255, 64, 212, 210, 78, 64, 99, 210, 191, 191, 118, 72, 137, 94, 0, 0, 102, 49, 46, 195, 255, 64, 212, 210, 78, 64, 99, 210, 191, 191, 118, 72, 138, 31, 0, 60, 102, 49, 148, 172, 3, 65, 237, 13, 8, 64, 115, 29, 199, 191, 97, 80, 153, 96, 0, 0, 229, 53, 148, 172, 3, 65, 237, 13, 8, 64, 115, 29, 199, 191, 97, 80, 153, 23, 0, 60, 229, 53, 243, 108, 12, 65, 82, 99, 133, 63, 7, 66, 245, 191, 63, 95, 161, 87, 0, 0, 43, 57, 243, 108, 12, 65, 82, 99, 133, 63, 7, 66, 245, 191, 63, 95, 158, 10, 0, 60, 43, 57, 46, 195, 255, 64, 212, 210, 78, 64, 99, 210, 191, 63, 54, 8, 118, 95, 0, 0, 102, 49, 46, 195, 255, 64, 212, 210, 78, 64, 99, 210, 191, 63, 54, 8, 119, 32, 0, 60, 102, 49, 148, 172, 3, 65, 237, 13, 8, 64, 115, 29, 199, 63, 46, 29, 102, 103, 0, 0, 229, 53, 148, 172, 3, 65, 237, 13, 8, 64, 115, 29, 199, 63, 46, 29, 103, 30, 0, 60, 229, 53, 243, 108, 12, 65, 82, 99, 133, 63, 7, 66, 245, 63, 31, 63, 98, 116, 0, 0, 43, 57, 243, 108, 12, 65, 82, 99, 133, 63, 7, 66, 245, 63, 31, 63, 96, 39, 0, 60, 43, 57, 46, 195, 255, 192, 212, 210, 78, 64, 99, 210, 191, 191, 138, 72, 193, 67, 0, 0, 102, 49, 46, 195, 255, 192, 212, 210, 78, 64, 99, 210, 191, 191, 138, 72, 192, 59, 0, 60, 102, 49, 148, 172, 3, 193, 237, 13, 8, 64, 115, 29, 199, 191, 159, 80, 210, 75, 0, 0, 229, 53, 148, 172, 3, 193, 237, 13, 8, 64, 115, 29, 199, 191, 159, 80, 195, 51, 0, 60, 229, 53, 243, 108, 12, 193, 82, 99, 133, 63, 7, 66, 245, 191, 193, 95, 236, 77, 0, 0, 43, 57, 243, 108, 12, 193, 82, 99, 133, 63, 7, 66, 245, 191, 193, 95, 178, 48, 0, 60, 43, 57, 243, 108, 12, 193, 82, 99, 133, 63, 7, 66, 245, 63, 225, 63, 78, 79, 0, 0, 43, 57, 243, 108, 12, 193, 82, 99, 133, 63, 7, 66, 245, 63, 225, 63, 21, 49, 0, 60, 43, 57, 148, 172, 3, 193, 237, 13, 8, 64, 115, 29, 199, 63, 210, 29, 61, 75, 0, 0, 229, 53, 148, 172, 3, 193, 237, 13, 8, 64, 115, 29, 199, 63, 210, 29, 46, 51, 0, 60, 229, 53, 46, 195, 255, 192, 212, 210, 78, 64, 99, 210, 191, 63, 202, 8, 64, 67, 0, 0, 102, 49, 46, 195, 255, 192, 212, 210, 78, 64, 99, 210, 191, 63, 202, 8, 63, 59, 0, 60, 102, 49, 230, 73, 127, 192, 49, 217, 78, 64, 13, 165, 191, 63, 0, 7, 126, 63, 0, 0, 102, 49, 230, 73, 127, 192, 49, 217, 78, 64, 13, 165, 191, 63, 0, 7, 126, 63, 0, 60, 102, 49, 190, 188, 131, 192, 135, 222, 8, 64, 28, 24, 210, 63, 255, 26, 124, 63, 0, 0, 229, 53, 190, 188, 131, 192, 135, 222, 8, 64, 28, 24, 210, 63, 255, 26, 124, 63, 0, 60, 229, 53, 50, 136, 140, 192, 44, 130, 138, 63, 28, 103, 6, 64, 255, 55, 123, 64, 0, 0, 43, 57, 50, 136, 140, 192, 44, 130, 138, 63, 28, 103, 6, 64, 255, 55, 124, 63, 0, 60, 43, 57, 0, 0, 0, 0, 70, 217, 78, 64, 6, 253, 192, 191, 117, 127, 130, 63, 0, 0, 102, 49, 0, 0, 0, 0, 70, 217, 78, 64, 6, 253, 192, 191, 117, 127, 130, 63, 0, 60, 102, 49, 0, 0, 0, 0, 246, 3, 9, 64, 0, 183, 217, 191, 97, 127, 130, 63, 0, 0, 229, 53, 0, 0, 0, 0, 246, 3, 9, 64, 0, 183, 217, 191, 97, 127, 130, 63, 0, 60, 229, 53, 0, 0, 0, 0, 95, 21, 140, 63, 135, 69, 12, 192, 70, 127, 130, 63, 0, 0, 43, 57, 0, 0, 0, 0, 95, 21, 140, 63, 135, 69, 12, 192, 70, 127, 130, 62, 0, 60, 43, 57, 59, 244, 39, 65, 0, 0, 0, 0, 172, 24, 154, 63, 48, 77, 126, 1, 85, 53, 235, 59, 59, 244, 39, 65, 0, 0, 0, 0, 172, 24, 154, 191, 49, 78, 130, 1, 85, 57, 235, 59, 223, 152, 1, 65, 0, 0, 144, 64, 138, 254, 255, 190, 126, 250, 130, 3, 85, 57, 30, 37, 223, 152, 1, 65, 0, 0, 144, 64, 138, 254, 255, 62, 120, 0, 126, 123, 85, 53, 30, 37, 141, 6, 14, 65, 82, 99, 133, 63, 90, 129, 35, 191, 67, 62, 130, 2, 85, 57, 43, 57, 141, 6, 14, 65, 82, 99, 133, 63, 90, 129, 35, 63, 64, 59, 126, 2, 85, 53, 43, 57, 46, 70, 5, 65, 237, 13, 8, 64, 76, 190, 4, 191, 94, 36, 130, 2, 85, 57, 229, 53, 46, 70, 5, 65, 237, 13, 8, 64, 76, 190, 4, 63, 90, 32, 126, 2, 85, 53, 229, 53, 49, 123, 1, 65, 212, 210, 78, 64, 46, 195, 255, 190, 115, 16, 130, 124, 85, 57, 102, 49, 49, 123, 1, 65, 212, 210, 78, 64, 46, 195, 255, 62, 110, 11, 126, 2, 85, 53, 102, 49, 59, 244, 39, 193, 0, 0, 0, 0, 172, 24, 154, 191, 207, 78, 253, 63, 85, 53, 235, 59, 59, 244, 39, 193, 0, 0, 0, 0, 172, 24, 154, 63, 208, 77, 3, 63, 85, 57, 235, 59, 223, 152, 1, 193, 0, 0, 144, 64, 138, 254, 255, 62, 136, 0, 6, 63, 85, 57, 30, 37, 223, 152, 1, 193, 0, 0, 144, 64, 138, 254, 255, 190, 130, 250, 250, 63, 85, 53, 30, 37, 141, 6, 14, 193, 82, 99, 133, 63, 90, 129, 35, 63, 192, 59, 4, 63, 85, 57, 43, 57, 141, 6, 14, 193, 82, 99, 133, 63, 90, 129, 35, 191, 189, 62, 252, 63, 85, 53, 43, 57, 46, 70, 5, 193, 237, 13, 8, 64, 76, 190, 4, 63, 166, 32, 5, 63, 85, 57, 229, 53, 46, 70, 5, 193, 237, 13, 8, 64, 76, 190, 4, 191, 162, 36, 251, 63, 85, 53, 229, 53, 49, 123, 1, 193, 212, 210, 78, 64, 46, 195, 255, 62, 146, 11, 5, 63, 85, 57, 102, 49, 49, 123, 1, 193, 212, 210, 78, 64, 46, 195, 255, 190, 141, 16, 251, 63, 85, 53, 102, 49 ),
"array_index_data": PoolByteArray( 71, 0, 4, 0, 29, 0, 71, 0, 46, 0, 4, 0, 53, 0, 14, 0, 17, 0, 53, 0, 94, 0, 14, 0, 109, 0, 28, 0, 103, 0, 109, 0, 70, 0, 28, 0, 95, 0, 12, 0, 15, 0, 95, 0, 58, 0, 12, 0, 119, 0, 32, 0, 113, 0, 119, 0, 76, 0, 32, 0, 41, 0, 0, 0, 3, 0, 41, 0, 88, 0, 0, 0, 59, 0, 24, 0, 13, 0, 59, 0, 64, 0, 24, 0, 89, 0, 36, 0, 1, 0, 89, 0, 86, 0, 36, 0, 47, 0, 2, 0, 5, 0, 47, 0, 40, 0, 2, 0, 77, 0, 16, 0, 33, 0, 77, 0, 52, 0, 16, 0, 35, 0, 56, 0, 81, 0, 35, 0, 18, 0, 56, 0, 81, 0, 54, 0, 79, 0, 81, 0, 56, 0, 54, 0, 79, 0, 52, 0, 77, 0, 79, 0, 54, 0, 52, 0, 7, 0, 44, 0, 51, 0, 7, 0, 8, 0, 44, 0, 51, 0, 42, 0, 49, 0, 51, 0, 44, 0, 42, 0, 49, 0, 40, 0, 47, 0, 49, 0, 42, 0, 40, 0, 11, 0, 82, 0, 93, 0, 11, 0, 38, 0, 82, 0, 93, 0, 84, 0, 91, 0, 93, 0, 82, 0, 84, 0, 91, 0, 86, 0, 89, 0, 91, 0, 84, 0, 86, 0, 23, 0, 68, 0, 63, 0, 23, 0, 26, 0, 68, 0, 63, 0, 66, 0, 61, 0, 63, 0, 68, 0, 66, 0, 61, 0, 64, 0, 59, 0, 61, 0, 66, 0, 64, 0, 9, 0, 92, 0, 45, 0, 9, 0, 10, 0, 92, 0, 45, 0, 90, 0, 43, 0, 45, 0, 92, 0, 90, 0, 43, 0, 88, 0, 41, 0, 43, 0, 90, 0, 88, 0, 110, 0, 80, 0, 115, 0, 110, 0, 34, 0, 80, 0, 115, 0, 78, 0, 117, 0, 115, 0, 80, 0, 78, 0, 117, 0, 76, 0, 119, 0, 117, 0, 78, 0, 76, 0, 21, 0, 62, 0, 99, 0, 21, 0, 22, 0, 62, 0, 99, 0, 60, 0, 97, 0, 99, 0, 62, 0, 60, 0, 97, 0, 58, 0, 95, 0, 97, 0, 60, 0, 58, 0, 100, 0, 74, 0, 105, 0, 100, 0, 30, 0, 74, 0, 105, 0, 72, 0, 107, 0, 105, 0, 74, 0, 72, 0, 107, 0, 70, 0, 109, 0, 107, 0, 72, 0, 70, 0, 19, 0, 98, 0, 57, 0, 19, 0, 20, 0, 98, 0, 57, 0, 96, 0, 55, 0, 57, 0, 98, 0, 96, 0, 55, 0, 94, 0, 53, 0, 55, 0, 96, 0, 94, 0, 31, 0, 50, 0, 75, 0, 31, 0, 6, 0, 50, 0, 75, 0, 48, 0, 73, 0, 75, 0, 50, 0, 48, 0, 73, 0, 46, 0, 71, 0, 73, 0, 48, 0, 46, 0, 67, 0, 108, 0, 65, 0, 67, 0, 106, 0, 108, 0, 106, 0, 109, 0, 108, 0, 106, 0, 107, 0, 109, 0, 69, 0, 106, 0, 67, 0, 69, 0, 104, 0, 106, 0, 104, 0, 107, 0, 106, 0, 104, 0, 105, 0, 107, 0, 27, 0, 104, 0, 69, 0, 27, 0, 101, 0, 104, 0, 101, 0, 105, 0, 104, 0, 101, 0, 100, 0, 105, 0, 65, 0, 102, 0, 25, 0, 65, 0, 108, 0, 102, 0, 108, 0, 103, 0, 102, 0, 108, 0, 109, 0, 103, 0, 85, 0, 118, 0, 87, 0, 85, 0, 116, 0, 118, 0, 116, 0, 119, 0, 118, 0, 116, 0, 117, 0, 119, 0, 83, 0, 116, 0, 85, 0, 83, 0, 114, 0, 116, 0, 114, 0, 117, 0, 116, 0, 114, 0, 115, 0, 117, 0, 39, 0, 114, 0, 83, 0, 39, 0, 111, 0, 114, 0, 111, 0, 115, 0, 114, 0, 111, 0, 110, 0, 115, 0, 87, 0, 112, 0, 37, 0, 87, 0, 118, 0, 112, 0, 118, 0, 113, 0, 112, 0, 118, 0, 119, 0, 113, 0 ),
"blend_shape_data": [  ],
"format": 2194711,
"index_count": 336,
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 120
}

[sub_resource type="Shader" id=10]
code = "shader_type spatial;
render_mode blend_add, unshaded, cull_disabled;

uniform float intensity: hint_range(0.0, 1.0, 0.01);
uniform float offset: hint_range(0.0, 1.0, 0.001) = 0.0;
uniform float fade_length: hint_range(0.0, 1.0, 0.01);
uniform float edge: hint_range(0.0, 0.5, 0.01) = 0.2;
uniform vec4 color_1: hint_color;
uniform vec4 color_2: hint_color;
uniform sampler2D fade_texture;
uniform sampler2D pattern_texture;
uniform float proximity_fade_dist = 0.5;

void fragment() {
	// textures
	float fade = texture(fade_texture, UV + vec2(TIME * 0.7, 0.0)).r;
	float pattern = texture(pattern_texture, UV + vec2(TIME * -0.2, TIME * -0.5)).r;
	
	// effects
	float fx_cutoff = 1.0 - step(offset, fade);
	float fx_fade = smoothstep(0.0 + offset - fade_length, 1.0 + offset - fade_length, fade);
	float fx_edge = smoothstep(offset - edge, offset, fade);
	float fx_pattern = smoothstep(offset, offset + 0.5, fade + pattern + fx_fade);
	
	float alpha = (fx_fade + fx_edge + fx_pattern) * fx_cutoff;
	
	// color
	vec3 color = mix(color_1.rgb, color_2.rgb, clamp(fx_edge + fx_pattern, 0.0, 1.0));
	
	// proximity fade
	float depth_tex = texture(DEPTH_TEXTURE, SCREEN_UV).r;
	vec4 world_pos = INV_PROJECTION_MATRIX * vec4(SCREEN_UV * 2.0 - 1.0, depth_tex * 2.0 - 1.0, 1.0);
	world_pos.xyz /= world_pos.w;
	alpha *= 1.0 - smoothstep(world_pos.z + proximity_fade_dist, world_pos.z, VERTEX.z);
	
	ALPHA = clamp(alpha, 0.0, 1.0) * intensity;
	ALBEDO = color;
}"

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/intensity = 1.0
shader_param/offset = 0.0
shader_param/fade_length = 0.5
shader_param/edge = 0.2
shader_param/color_1 = Color( 0, 1, 0.666667, 1 )
shader_param/color_2 = Color( 0, 1, 0.933333, 1 )
shader_param/proximity_fade_dist = 0.25

[sub_resource type="Animation" id=26]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Base:material/0:shader_param/offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Base:material/0:shader_param/fade_length")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.5 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Base:material/0:shader_param/intensity")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("KinematicBody:translation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("BlockOuter:material/0:shader_param/dissolve_threshold")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("BlockOuter:material/0:shader_param/emission_strength")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("KinematicBody/MeshInstance:material/0:shader_param/intensity")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("KinematicBody/MeshInstance:material/0:shader_param/cutoff")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 10.0 ]
}

[sub_resource type="Animation" id=27]
resource_name = "Rise"
length = 2.5
tracks/0/type = "value"
tracks/0/path = NodePath("Base:material/0:shader_param/offset")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.2, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 0.95 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Base:material/0:shader_param/fade_length")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1.2, 2.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.5, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Base:material/0:shader_param/intensity")
tracks/2/interp = 1
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.2, 1.2, 1.7 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("KinematicBody:translation")
tracks/3/interp = 1
tracks/3/loop_wrap = false
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.4, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 5, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("BlockOuter:material/0:shader_param/dissolve_threshold")
tracks/4/interp = 1
tracks/4/loop_wrap = false
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.5, 1.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("BlockOuter:material/0:shader_param/emission_strength")
tracks/5/interp = 1
tracks/5/loop_wrap = false
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 2, 2.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("KinematicBody/MeshInstance:material/0:shader_param/intensity")
tracks/6/interp = 1
tracks/6/loop_wrap = false
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0.2, 0.4, 1.7, 2.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 1.0, 0.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("KinematicBody/MeshInstance:material/0:shader_param/cutoff")
tracks/7/interp = 1
tracks/7/loop_wrap = false
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0.2, 0.7, 1.7, 2.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 10.0, 1.0, 1.0, 10.0 ]
}

[node name="Block" type="Spatial"]

[node name="KinematicBody" type="KinematicBody" parent="."]
collision_layer = 8
collision_mask = 3

[node name="CollisionShape" type="CollisionShape" parent="KinematicBody"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -2.5, 0 )
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="KinematicBody"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -4, 0 )
mesh = SubResource( 6 )
skeleton = NodePath("../CollisionShape")
material/0 = SubResource( 8 )

[node name="BlockOuter" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -6, 0, 0 )
mesh = SubResource( 3 )
material/0 = SubResource( 5 )

[node name="BlockOuter2" type="MeshInstance" parent="."]
transform = Transform( -0.999995, 0.00274336, 0.00176539, 0.00274319, 0.999996, -9.82132e-05, -0.00176566, -9.33892e-05, -0.999998, -2, 0, 0 )
mesh = SubResource( 3 )
material/0 = SubResource( 5 )

[node name="BlockOuter3" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0 )
mesh = SubResource( 3 )
material/0 = SubResource( 5 )

[node name="BlockOuter4" type="MeshInstance" parent="."]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 6, 0, 0 )
mesh = SubResource( 3 )
material/0 = SubResource( 5 )

[node name="Base" type="MeshInstance" parent="."]
mesh = SubResource( 9 )
material/0 = SubResource( 11 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Rise"
playback_process_mode = 0
playback_speed = 2.0
anims/RESET = SubResource( 26 )
anims/Rise = SubResource( 27 )
